input { 
    jdbc {
        jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        statement => "select * from raw_table"
        schedule => "* * * * *"
}
output {
    stdout { 
        codec =>  "rubydebug"
    }
}


input {
    jdbc {
        jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select ... from table_name"
    }
}
document_id => "%{id}"

output {
    stdout { codec => json_lines }
}


# input {
#     tcp {
#         port => 9900
#         type => "apache"
#     } 
    jdbc {
        jdbc_driver_library => "sqlite-jdbc-3.8.11.2.jar"
        jdbc_driver_class => "org.sqlite.JDBC"
        jdbc_connection_string => "jdbc:sqlite:apt_info.db"
        jdbc_user => "sqlite"
        statement => "select si, gu, dong, aptname, dong_cnt, date, type, cnt1, cnt2, cnt3, cnt4, cntAll from apt_info"
    schedule => "* * * * *"  # crontab 표기법의 스케쥴 설정

}
# }

# filter{
#     grok{
#         match => {"message" => "hello %{WORD:name}"} #name 이라는 필드로 저장
#     }

#     date{#과거의 로그 데이터 시점.  [10/Nov/2017:01:24:06 +0000]
#         match => ["timestamp", "dd/MMM/yyy:HH:mm:ss Z"]
#         remove_field => "timestamp"
#     }
# }

# output { 
#     stdout { 
#         codec => rubydebug
#     } 
# }


bin/logstash-plugin list --verbose